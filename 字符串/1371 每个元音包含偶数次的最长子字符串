class Solution {
    public int findTheLongestSubstring(String s) {
        String need ="aeiou";
        int[] xor =new int[]{1,1<<1,1<<2,1<<3,1<<4,1<<5,1<<6};
        int curPos=0;
        int res=0;
        Map<Integer, Integer> stateMap = new HashMap<Integer,Integer>();
        stateMap.put(0,0);//状态初始化
        for(int i=0;i<s.length();i++){
            int j=need.indexOf(s.charAt(i));
            int cur=i+1;//位置
            if(j!=-1){
                curPos^=xor[j];
            }
            //面向对象，进行取值。当值取到两次时，为null
            Integer lastPos = stateMap.get(curPos);
            if(lastPos==null){
                stateMap.put(curPos,cur);//异或的数字和位置
            }else{
                int size = cur-lastPos;//当前位置，与上一次奇数次出现的位置相减
                if(size>res) res=size;
            }
        }
        return res;
    }
}
