/*
输入一个字符串，打印出该字符串中字符的所有排列。
你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。
示例:
输入：s = "abc"
输出：["abc","acb","bac","bca","cab","cba"]
*/
class Solution {
    List<String> res= new LinkedList<>();
    char[] c;
    public String[] permutation(String s) {
        if(s==null ||s.length()==0) return null;
        //转为字符数组
        c =s.toCharArray();
        //深度遍历
        dfs(0);
        //返回字符串数组
        return res.toArray(new String[res.size()]);
    }

    private void dfs(int x){
        if(x==c.length-1){
            //将字符数组的排列保持
            res.add(String.valueOf(c));
        }
        Set<Character> set= new HashSet<>();
        for(int i=x;i<c.length;i++){
            //不允许包含重复元素，对其进行剪枝
            if(set.contains(c[i])) continue;
            set.add(c[i]);//添加不重复的元素
            swap(i,x);//将i固定在x位
            dfs(x+1);//开始固定在x+1位
            swap(i,x);// 恢复交换
        }
    }

    private void swap(int i, int j){
        char temp = c[i];
        c[i]=c[j];
        c[j]=temp;
    }
}
