class Solution {
    public List<String> findWords(char[][] board, String[] words) {
        List<String> res =new ArrayList<>();
        if(board==null||board.length==0||board[0].length==0||words==null||words.length==0) return res;
        for(String w:words){
            if(exist(board,w)){
                res.add(w);
            }
        }
        return res;
    }
    //基于79题的思路去做 
    private boolean exist(char[][] board,String w){
        char[] word = w.toCharArray();
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(dfs(board,i,j,word,0)){
                    return true;
                }
            }
        }
        return false;
    }

    private boolean dfs(char[][] board, int i, int j, char[] word, int index){
        if(i<0||i>=board.length||j<0||j>=board[0].length||board[i][j]!=word[index]){
            return false;
        }
        if(index==word.length-1){
            return true;
        }
        char temp =board[i][j];
        board[i][j]='.';
        boolean res = dfs(board,i-1,j,word,index+1)||dfs(board,i+1,j,word,index+1)||dfs(board,i,j-1,word,index+1)||dfs(board,i,j+1,word,index+1);
        board[i][j]=temp;
        return res;
    }
}
