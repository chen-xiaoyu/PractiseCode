/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public int cycleLength(ListNode head) {
        if(head==null) return 0;
        ListNode slow = head;
        ListNode fast = head;
        //&&的条件，fast指针判断
        int length = 0;
        while(fast!=null &&fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            //存在环时总会有一点相等
            if(slow==fast){
                slow = slow.next;
                fast = fast.next.next;
                length ++;
                while(slow != fast){
                    slow = slow.next;
                    fast = fast.next.next;
                    length ++;
                    if(slow==fast) return length;    
                }
            }
        }
        return length;
    }
}
