import java.util.*;
import java.lang.*;

public class sort {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String t = in.nextLine();
        int len = t.length();
        int[] arr = new int[len];
        for (int i = 0; i < len; i++) {
            arr[i] = Integer.parseInt(t.substring(0, 1));//Integer.parseInt把()里的内容转换成整数，substring字符串的一个函数，表示返回一个新字符串
            t = t.substring(1);//获取字符串的起始位置，将后面所有的字符串
        }
        Sort(arr);//len-1是指最后一位数的下角标
        for (int j = 0; j < arr.length; j++) {
            System.out.print(arr[j]);
        }
    }

    public static int[] Sort(int[] arr) {//进行递归调用
        if(arr.length<0)
            return null;
        int tmp=0;
        for(int i=0;i<arr.length-1;i++){
            //有序标记，每一轮的初始值都是true
            boolean isSorted = true;
            //奇数轮，从左向右比较和交换
            for(int j=i;j<arr.length-1;j++){
                if(arr[j]>arr[j+1]){
                    tmp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=tmp;
                    //有元素交换，所以不是有序的，标记为false
                    isSorted=false;
                }
            }
            //该轮结束后，如果有序就断开
            if(isSorted) break;
            //在偶数论之前，将isSorted重新标记为true
            isSorted=true;
            //偶数轮，从右向左比较和交换
            for(int j=arr.length-1;j>i;j--){
                if(arr[j]<arr[j-1]){
                    tmp=arr[j];
                    arr[j]=arr[j-1];
                    arr[j-1]=tmp;
                    isSorted=false;
                }
            }
            if(isSorted) break;
        }
        return arr;
    }
}
