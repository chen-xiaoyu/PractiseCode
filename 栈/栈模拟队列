import java.util.Stack;

public class stackToQueue {
    private Stack<Integer> s1 = new Stack<>();
    private Stack<Integer> s2 = new Stack<>();
    //入栈操作
    public void enQueue(int element){
        s1.push(element);
    }

    //出栈操作(写成包装类)，默认值null
    public Integer deQueue(){
        if(s2.isEmpty()){
            if(s1.isEmpty()) return null;
            transfer();
        }
        return s2.pop();
    }
    //把栈1的元素都转移到2
    private void transfer(){
        while(!s1.isEmpty()){
            s2.push(s1.pop());
        }
    }
    public static void main(String[] args) throws Exception{
        stackToQueue stackQueue = new stackToQueue();
        stackQueue.enQueue(1);
        stackQueue.enQueue(2);
        stackQueue.enQueue(3);
        System.out.println(stackQueue.deQueue());
        System.out.println(stackQueue.deQueue());
        System.out.println(stackQueue.deQueue());
        stackQueue.enQueue(4);
        System.out.println(stackQueue.deQueue());
        System.out.println(stackQueue.deQueue());
    }
}
