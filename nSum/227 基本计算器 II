class Solution {
    private int index = 0;//递归时共享，标记进行到哪一位
    public int calculate(String s) {
        Deque<Integer> stack = new LinkedList<>();
        int num = 0;
        char sign = '+';
        while(index < s.length()){
            char c = s.charAt(index);
            if(Character.isDigit(c)){
                num = num*10 + (c-'0');
            }
            if(!Character.isDigit(c)&& c != ' ' || index == s.length()-1){
                int pre = 0;
                switch(sign){
                    case '+': 
                        stack.push(num);
                        break;
                    case '-': 
                        stack.push(-num);
                        break;
                    case '*':
                        pre = stack.pop();
                        stack.push(pre * num);
                        break;
                    case '/':
                        pre = stack.pop();
                        stack.push(pre / num);
                }
                sign = c;
                num = 0;
            }
            //遇到右括号返回结果
            index++;
        }
        int res = 0;
        while(!stack.isEmpty()){
            res += stack.pop();
        }
        return res;
    }
}
