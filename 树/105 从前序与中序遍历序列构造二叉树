/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return conTree(preorder,0,preorder.length-1, inorder,0, inorder.length-1);
    }

    public TreeNode conTree(int[] preorder,int preLeft,int preRight, int[] inorder,int inLeft,int inRight){
        if(preLeft>preRight || inLeft>inRight) return null;
        TreeNode root = new TreeNode(preorder[preLeft]);//构建根结点
        for(int i=inLeft; i<=inRight;i++){
            if(preorder[preLeft]==inorder[i]){//从中序遍历中区别左右子树
                root.left = conTree(preorder,preLeft+1,preLeft+i-inLeft,inorder,inLeft,i-1);
                root.right = conTree(preorder,preLeft+i-inLeft+1,preRight,inorder,i+1,inRight);
            }
        }
        return root;
    }
}
