/*
给定一个由若干 0 和 1 组成的数组 A，我们最多可以将 K 个值从 0 变成 1 。
返回仅包含 1 的最长（连续）子数组的长度。
示例 1：
输入：A = [1,1,1,0,0,0,1,1,1,1,0], K = 2
输出：6
解释： 
[1,1,1,0,0,1,1,1,1,1,1]
粗体数字从 0 翻转到 1，最长的子数组长度为 6。
*/
class Solution {
    public int longestOnes(int[] A, int K) {
        if(A==null||A.length==0) return 0;
        int left=0,right=0,count=0,res=0;
        //滑动窗口
        while(right<A.length){
            if(A[right]==0) count++;
            while(count>K){
                if(A[left]==0) count--;
                left++;
            }
            res = Math.max(res,right-left+1);
            right++;
        }
        return res;
    }
}
