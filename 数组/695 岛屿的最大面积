class Solution {
    public int maxAreaOfIsland(int[][] grid) {
        if(grid==null || grid.length==0 || grid[0].length==0) return 0;
        int res =0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[i].length;j++){
                if(grid[i][j]==1){
                    res =Math.max(res,dfs(i,j,grid));
                }
            }
        }
        return res;
    }
    //每次找到满足条件的岛屿，默认num=1;找到后把岛屿改为0，沉岛思想
    private int dfs(int i, int j, int[][] grid){
        if(i<0||j<0||i>=grid.length ||j>=grid[i].length||grid[i][j]==0) return 0;
        int num=1;
        grid[i][j]=0;
        num+=dfs(i-1,j,grid);
        num+=dfs(i+1,j,grid);
        num+=dfs(i,j-1,grid);
        num+=dfs(i,j+1,grid);
        return num;
    }
}
