/*
给定一个未经排序的整数数组，找到最长且连续的的递增序列，并返回该序列的长度。
示例 1:
输入: [1,3,5,4,7]
输出: 3
解释: 最长连续递增序列是 [1,3,5], 长度为3。
尽管 [1,3,5,7] 也是升序的子序列, 但它不是连续的，因为5和7在原数组里被4隔开。
*/
class Solution {
    public int findLengthOfLCIS(int[] nums) {
    if(nums==null||nums.length==0) return 0;
        int ans = 0, anchor = 0;
        for (int i = 0; i < nums.length; i++) {
            //找到不连续递增的下标
            if (i > 0 && nums[i-1] >= nums[i]) anchor = i;
            //两个递增序列长度比较
            ans = Math.max(ans, i - anchor + 1);
        }
        return ans;
    }
}
