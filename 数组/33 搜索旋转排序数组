class Solution {
    public int search(int[] nums, int target) {
        if(nums==null||nums.length==0) return -1;
        int start =0;
        int end = nums.length-1;
        while(end>=start){
        //二分法
            int mid = start+(end-start)/2;
            //先判断中的数是否满足
            if(nums[mid]==target) return mid;
            //判断是前半部分有序还是后半部分有序
            if(nums[start]<=nums[mid]){
            //判断是否在有序的队列中
                if(target>=nums[start]&&target<nums[mid]){
                    end=mid-1;
                }else{
                    start=mid+1;
                }
            }else{
            //判断是否在有序的队列中
                if(target>nums[mid]&&target<=nums[end]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }
        }
        return -1;
    }
}
