class Solution {
    public int movingCount(int m, int n, int k) {
        if(k<0) return 0;
        //设置数组 用来判断是否可以进入
        int[][] num = new int[m][n];
        return dfs(0,0,m,n,k,num);
    }

    public int dfs(int row, int col, int m, int n, int k, int[][] num){
        //遍历过的也不要
        if(row<0||row>=m||col<0||col>=n||getSum(row)+getSum(col)>k||num[row][col]==1) return 0;
        num[row][col] =1;
        //当前格子满足加1
        return dfs(row+1,col,m,n,k,num)+dfs(row-1,col,m,n,k,num)+dfs(row,col+1,m,n,k,num)+dfs(row,col-1,m,n,k,num)+1;
    }

    private int getSum(int i){
        int sum=0;
        do{
            sum+=i%10;
        }
        while((i=i/10)>0);
        return sum;
    }
}
